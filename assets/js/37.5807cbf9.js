(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{383:function(t,r,o){"use strict";o.r(r);var a=o(43),e=Object(a.a)({},(function(){var t=this,r=t.$createElement,o=t._self._c||r;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"springboot概述"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#springboot概述"}},[t._v("#")]),t._v(" SpringBoot概述")]),t._v(" "),o("h2",{attrs:{id:"概述"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),o("p",[t._v("Spring Boot 可以称之为 "),o("strong",[t._v("新一代 JavaEE 开发标准")]),t._v("；随着动态语言的流行 (Ruby、Groovy、Scala、Node.js)，Java 的开发显得格外的笨重：繁多的配置、低下的开发效率、复杂的部署流程以及第三方技术集成难度大。")]),t._v(" "),o("p",[t._v("在上述环境下，Spring Boot 应运而生。它使用 “"),o("strong",[t._v("习惯优于配置")]),t._v("” （项目中存在大量的配置，此外还内置了一个习惯性的配置，让你无需手动进行配置）的理念让你的项目快速的运行起来。使用 Spring Boot 很容易创建一个独立运行（运行 Jar，内嵌 Servlet 容器）准生产级别的基于 Spring 框架的项目，使用 Spring Boot 你可以不用或者只需很少的 Spring 配置。")]),t._v(" "),o("h2",{attrs:{id:"主要目标"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#主要目标"}},[t._v("#")]),t._v(" 主要目标")]),t._v(" "),o("p",[t._v("Spring Boot 让您更简单的创建基于 Spring 的独立的，生产级的可运行 “应用程序”。 对于 Spring 平台和第三方库，我们采取一种 “"),o("strong",[t._v("强制性")]),t._v("” 的观点，以至于您可以更加轻松的开始使用。 大部分 Spring Boot 应用程序只需要一点点 Spring 的配置即可。")]),t._v(" "),o("p",[t._v("您能够使用 Spring Boot 创建以 "),o("code",[t._v("java -jar")]),t._v(" 或更传统的 "),o("code",[t._v("war")]),t._v(" 部署的方式运行的 "),o("strong",[t._v("Java 应用程序")]),t._v("。我们也提供了可以运行 “spring scripts” 的命令行（CLT）工具。")]),t._v(" "),o("ul",[o("li",[t._v("为所有 “Spring 开发” 提供更快速、更便于理解的入门体验。")]),t._v(" "),o("li",[t._v("Be opinionated out of the box but get out of the way quickly as requirements start to diverge from the defaults.")]),t._v(" "),o("li",[t._v("提供一系列的非功能性特性，这些特性是大型项目类所共有的（如： 内嵌 servers, security, metrics, health checks, and externalized configuration）。")]),t._v(" "),o("li",[t._v("完全不生成代码， 也不需要配置 XML。")])])])}),[],!1,null,null,null);r.default=e.exports}}]);